/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package programaprojeto;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author sueli
 */
public class Menu extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        itmCadastrarFuncionarios = new javax.swing.JMenuItem();
        itmListarFuncionarios = new javax.swing.JMenuItem();
        itmAlterarFuncionario = new javax.swing.JMenuItem();
        itmExcluirFuncionarios = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        itmCadastrarPaciente = new javax.swing.JMenuItem();
        itmListarPaciente = new javax.swing.JMenuItem();
        itmAlterarPaciente = new javax.swing.JMenuItem();
        itmExcluirPaciente = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        itmCadastrar = new javax.swing.JMenuItem();
        itmListar = new javax.swing.JMenuItem();
        itmAlterar = new javax.swing.JMenuItem();
        itmCancelar = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenu2.setText("Funcionários");

        itmCadastrarFuncionarios.setText("Cadastrar");
        itmCadastrarFuncionarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmCadastrarFuncionariosActionPerformed(evt);
            }
        });
        jMenu2.add(itmCadastrarFuncionarios);

        itmListarFuncionarios.setText("Listar");
        itmListarFuncionarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmListarFuncionariosActionPerformed(evt);
            }
        });
        jMenu2.add(itmListarFuncionarios);

        itmAlterarFuncionario.setText("Alterar");
        itmAlterarFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmAlterarFuncionarioActionPerformed(evt);
            }
        });
        jMenu2.add(itmAlterarFuncionario);

        itmExcluirFuncionarios.setText("Excluir");
        itmExcluirFuncionarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmExcluirFuncionariosActionPerformed(evt);
            }
        });
        jMenu2.add(itmExcluirFuncionarios);

        jMenuBar1.add(jMenu2);

        jMenu1.setText("Paciente");

        itmCadastrarPaciente.setText("Cadastrar");
        itmCadastrarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmCadastrarPacienteActionPerformed(evt);
            }
        });
        jMenu1.add(itmCadastrarPaciente);

        itmListarPaciente.setText("Listar");
        jMenu1.add(itmListarPaciente);

        itmAlterarPaciente.setText("Alterar");
        jMenu1.add(itmAlterarPaciente);

        itmExcluirPaciente.setText("Excluir");
        itmExcluirPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmExcluirPacienteActionPerformed(evt);
            }
        });
        jMenu1.add(itmExcluirPaciente);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Agendamentos");

        itmCadastrar.setText("Cadastrar");
        itmCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmCadastrarActionPerformed(evt);
            }
        });
        jMenu3.add(itmCadastrar);

        itmListar.setText("Listar");
        itmListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmListarActionPerformed(evt);
            }
        });
        jMenu3.add(itmListar);

        itmAlterar.setText("Alterar");
        itmAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmAlterarActionPerformed(evt);
            }
        });
        jMenu3.add(itmAlterar);

        itmCancelar.setText("Cancelar");
        itmCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmCancelarActionPerformed(evt);
            }
        });
        jMenu3.add(itmCancelar);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 277, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(416, 308));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void itmCadastrarFuncionariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmCadastrarFuncionariosActionPerformed
        new CadastroUsuario().setVisible(true);
    }//GEN-LAST:event_itmCadastrarFuncionariosActionPerformed

    private void itmCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmCadastrarActionPerformed
        new Agendamentos().setVisible(true);
    }//GEN-LAST:event_itmCadastrarActionPerformed

    private void itmListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmListarActionPerformed
        new Agenda().setVisible(true);
    }//GEN-LAST:event_itmListarActionPerformed

    private void itmAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmAlterarActionPerformed
        new AlteraçãoDeAgendamento().setVisible(true);
    }//GEN-LAST:event_itmAlterarActionPerformed

    private void itmCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmCancelarActionPerformed
        String u;
        u = JOptionPane.showInputDialog("Qual agendamento deseja cancelar?");
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conectado = DriverManager.getConnection("jdbc:mysql://localhost:3306/projeto", "root", "admin");
            PreparedStatement st = conectado.prepareStatement("DELETE FROM agendamentos WHERE agendamento_id = ?");
            st.setString(1, u);
          int resultado = st.executeUpdate ();
          if (resultado ==1){
            JOptionPane.showMessageDialog(null,"Agendamento cancelado com sucesso");
          }else{
            JOptionPane.showMessageDialog(null,"Agendamento não encontrado");  
          } 
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver não colocado na library" + ex.getMessage());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro nos dados do banco de dados " + ex.getMessage());
        }
    }//GEN-LAST:event_itmCancelarActionPerformed

    private void itmListarFuncionariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmListarFuncionariosActionPerformed
        new ListarFuncionarios().setVisible(true);
    }//GEN-LAST:event_itmListarFuncionariosActionPerformed

    private void itmAlterarFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmAlterarFuncionarioActionPerformed
        new AlterarFuncionarios().setVisible(true);
    }//GEN-LAST:event_itmAlterarFuncionarioActionPerformed

    private void itmExcluirFuncionariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmExcluirFuncionariosActionPerformed
        String u;
        u = JOptionPane.showInputDialog("Qual funcionário deseja excluir?");
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conectado = DriverManager.getConnection("jdbc:mysql://localhost:3306/projeto", "root", "admin");
            PreparedStatement st = conectado.prepareStatement("DELETE FROM funcionarios WHERE funcionario_id = ?");
            st.setString(1, u);
          int resultado = st.executeUpdate ();
          if (resultado ==1){
            JOptionPane.showMessageDialog(null,"Funcionário excluido com sucesso");
          }else{
            JOptionPane.showMessageDialog(null,"Funcionário não encontrado");  
          } 
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver não colocado na library" + ex.getMessage());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro nos dados do banco de dados " + ex.getMessage());
        }
    }//GEN-LAST:event_itmExcluirFuncionariosActionPerformed

    private void itmCadastrarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmCadastrarPacienteActionPerformed
        new CadastrarPacientes().setVisible(true);
    }//GEN-LAST:event_itmCadastrarPacienteActionPerformed

    private void itmExcluirPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmExcluirPacienteActionPerformed
        String u;
        u = JOptionPane.showInputDialog("Qual paciente deseja excluir?");
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conectado = DriverManager.getConnection("jdbc:mysql://localhost:3306/projeto", "root", "admin");
            PreparedStatement st = conectado.prepareStatement("DELETE FROM pacientes WHERE paciente_id = ?");
            st.setString(1, u);
          int resultado = st.executeUpdate ();
          if (resultado ==1){
            JOptionPane.showMessageDialog(null,"Paciente excluido com sucesso");
          }else{
            JOptionPane.showMessageDialog(null,"Paciente não encontrado");  
          } 
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver não colocado na library" + ex.getMessage());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro nos dados do banco de dados " + ex.getMessage());
        }
    }//GEN-LAST:event_itmExcluirPacienteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem itmAlterar;
    private javax.swing.JMenuItem itmAlterarFuncionario;
    private javax.swing.JMenuItem itmAlterarPaciente;
    private javax.swing.JMenuItem itmCadastrar;
    private javax.swing.JMenuItem itmCadastrarFuncionarios;
    private javax.swing.JMenuItem itmCadastrarPaciente;
    private javax.swing.JMenuItem itmCancelar;
    private javax.swing.JMenuItem itmExcluirFuncionarios;
    private javax.swing.JMenuItem itmExcluirPaciente;
    private javax.swing.JMenuItem itmListar;
    private javax.swing.JMenuItem itmListarFuncionarios;
    private javax.swing.JMenuItem itmListarPaciente;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    // End of variables declaration//GEN-END:variables
}
