/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package programaprojeto;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sueli
 */
public class Agendamentos extends javax.swing.JFrame {

    /**
     * Creates new form Agendamentos
     */
    public Agendamentos() {
        initComponents();
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conectado = DriverManager.getConnection("jdbc:mysql://localhost:3306/projeto", "root", "admin");
            PreparedStatement st = conectado.prepareStatement("SELECT nome_paciente FROM pacientes");
            ResultSet usuários = st.executeQuery();
            while (usuários.next()){
                cmbPaciente.addItem(usuários.getString("nome_paciente"));
               };          
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver não colocado na library");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro nos dados do banco de dados " + ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmbHorario = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        cmbEspecialidade = new javax.swing.JComboBox<>();
        btnSalvar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cmbDentista = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        btnAtualizar = new javax.swing.JButton();
        cmbPaciente = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setText("Horario");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(30, 30, 40, 16);

        cmbHorario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8:15", "8:30", "8:45", "9:00", "9:15", "9:30", "9:45", "10:00", "10:15", "10:30", "10:45", "11:00", "12:30", "12:45", "13:00", "13:15", "13:30", "13:45", "14:00", "14:15", "14:30", "14:45", "15:00", "15:15", "15:30", "15:45", "16:00", "16:15", "16:30", "16:45", "17:00" }));
        cmbHorario.setToolTipText("ASD\nASDA\nASD");
        getContentPane().add(cmbHorario);
        cmbHorario.setBounds(100, 30, 72, 22);

        jLabel2.setText("Especialidade");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(30, 70, 71, 16);

        cmbEspecialidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Emergência", "Clinico geral", "Ortodontia", "Odonto pediatria", "Endodontia", "Periodontia", "Odontogeriatria", "Protese dentaria", "Implantodontia" }));
        getContentPane().add(cmbEspecialidade);
        cmbEspecialidade.setBounds(120, 70, 90, 22);

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalvar);
        btnSalvar.setBounds(60, 200, 72, 23);

        jLabel3.setText("Dentista");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(30, 110, 50, 16);

        cmbDentista.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione" }));
        getContentPane().add(cmbDentista);
        cmbDentista.setBounds(100, 110, 100, 22);

        jLabel4.setText("Paciente");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(30, 150, 50, 16);

        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAtualizar);
        btnAtualizar.setBounds(240, 70, 80, 23);

        cmbPaciente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione" }));
        getContentPane().add(cmbPaciente);
        cmbPaciente.setBounds(100, 150, 100, 22);

        setSize(new java.awt.Dimension(384, 294));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
String p, d, h;
h = cmbHorario.getSelectedItem().toString();
d = cmbDentista.getSelectedItem().toString();
p = cmbPaciente.getSelectedItem().toString();

try {
    Class.forName("com.mysql.cj.jdbc.Driver");
    Connection conectado = DriverManager.getConnection(
        "jdbc:mysql://localhost:3306/projeto", "root", "admin");
    
    String funcionarioQuery = "SELECT funcionario_id FROM funcionarios WHERE nome_funcionario = ?";
    PreparedStatement funcionarioSt = conectado.prepareStatement(funcionarioQuery);
    funcionarioSt.setString(1, d);
    ResultSet funcionarioRs = funcionarioSt.executeQuery();
    
    if (!funcionarioRs.next() || funcionarioRs.isAfterLast()) {
        JOptionPane.showMessageDialog(null, "Erro: Funcionario não encontrado ou múltiplos resultados");
        return;
    }
    int funcionarioId = funcionarioRs.getInt("funcionario_id");
    funcionarioRs.close();
    funcionarioSt.close();
    
    String pacienteQuery = "SELECT paciente_id FROM pacientes WHERE nome_paciente = ?";
    PreparedStatement pacienteSt = conectado.prepareStatement(pacienteQuery);
    pacienteSt.setString(1, p);
    ResultSet pacienteRs = pacienteSt.executeQuery();
    
    if (!pacienteRs.next() || pacienteRs.isAfterLast()) {
        JOptionPane.showMessageDialog(null, "Erro: Paciente não encontrado ou múltiplos resultados");
        return;
    }
    int pacienteId = pacienteRs.getInt("paciente_id");
    pacienteRs.close();
    pacienteSt.close();
    
    String sql = "INSERT INTO agendamentos (horario, funcionario_id, paciente_id) VALUES (?, ?, ?)";
    PreparedStatement st = conectado.prepareStatement(sql);
    st.setString(1, h);
    st.setInt(2, funcionarioId);
    st.setInt(3, pacienteId);
    st.executeUpdate();
    
    JOptionPane.showMessageDialog(null, "Agendamento cadastrado com Sucesso");
    
    st.close();
    conectado.close();
} catch (ClassNotFoundException ex) {
    JOptionPane.showMessageDialog(null, "Driver não colocado na library");
} catch (SQLException ex) {
    JOptionPane.showMessageDialog(null, "Erro nos dados do banco de dados: " + ex.getMessage());
}

cmbHorario.setSelectedIndex(0);
cmbDentista.setSelectedIndex(0);
cmbPaciente.setSelectedIndex(0);
cmbEspecialidade.setSelectedIndex(0);

    }//GEN-LAST:event_btnSalvarActionPerformed

    @SuppressWarnings("empty-statement")
    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        String e;
        e = cmbEspecialidade.getSelectedItem().toString();
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conectado = DriverManager.getConnection("jdbc:mysql://localhost:3306/projeto", "root", "admin");
        // 2 - Buscar todos os usuários no BI
            PreparedStatement st = conectado.prepareStatement("SELECT nome_funcionario FROM funcionarios WHERE especialidade=?");
            st.setString(1, e);
            ResultSet usuários = st.executeQuery();
            while (usuários.next()){
                cmbDentista.addItem(usuários.getString("nome_funcionario"));
               };          
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver não colocado na library");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro nos dados do banco de dados " + ex.getMessage());
        }
        cmbDentista.setSelectedIndex(0);
    }//GEN-LAST:event_btnAtualizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Agendamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Agendamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Agendamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Agendamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Agendamentos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> cmbDentista;
    private javax.swing.JComboBox<String> cmbEspecialidade;
    private javax.swing.JComboBox<String> cmbHorario;
    private javax.swing.JComboBox<String> cmbPaciente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
